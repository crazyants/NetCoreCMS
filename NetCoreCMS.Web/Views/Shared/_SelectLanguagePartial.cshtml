@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using Microsoft.Extensions.Localization
@using System.Web;
@using System.Net;

@*@inject IStringLocalizer _T*@
@inject IOptions<RequestLocalizationOptions> LocOptions


@{   
    var writer = new System.IO.StringWriter();
    Component.InvokeAsync("Language").Result.WriteTo(writer, HtmlEncoder);
    var currentLanguage = writer.GetStringBuilder().ToString();

    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new { Value = c.TwoLetterISOLanguageName.ToLower(), Text = c.NativeName.Split(" ").FirstOrDefault() })
        .ToList();
    var selectList = new SelectList(cultureItems,"Value","Text", currentLanguage);

    var returnUrl = WebUtility.UrlDecode(Context.Request.Path);
    if (Context.Request.QueryString.HasValue) {
        var qStr = Context.Request.QueryString.Value;
        returnUrl = returnUrl + WebUtility.UrlDecode(qStr);
    }
    var lang = "";
    if (GlobalContext.WebSite.IsMultiLangual)
    {
        lang = "/" + currentLanguage;
    }
    var cl = LocOptions.Value.SupportedUICultures.Where(x => x.TwoLetterISOLanguageName.ToLower() == CurrentLanguage).Select(c => new { Value = c.TwoLetterISOLanguageName.ToLower(), Text = c.NativeName.Split(" ").FirstOrDefault() });
}
@*<form id="selectLanguage" action="@lang/Home/SetLanguage/" method="post" class="form-inline" role="form" style="display:inline;">
    <div class="form-group">
        <input type="hidden" id="returnUrl" name="returnUrl" value="@returnUrl"/>
        <label for="exampleInputName2">@_T["Language"]</label>
        <select class="btn btn-mini btn-default" name="culture" id="culture" onchange="this.form.submit();"  asp-items="selectList"></select>
    </div>
</form>*@


<style>
    .dropbtn {
        background-color: transparent;
        /*color: white;*/
        /*padding: 16px;*/
        /*font-size: 16px;*/
        border: none;
        cursor: pointer;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        /*background-color: #f9f9f9;*/
        min-width: 100px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content a {
            /*color: black;*/
            padding: 8px 8px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                /*background-color: #3f51b5;*/
            }

    .dropdown:hover .dropdown-content {
        display: block;
    }

    .dropdown:hover .dropbtn {
        /*background-color: #3f51b5;*/
    }
</style>
<label for="exampleInputName2">@_T["Language"]</label>
<div class="dropdown">
    <button class="dropbtn">@cl.FirstOrDefault().Text <span class="glyphicon glyphicon-triangle-bottom"></span> </button>
    <div class="dropdown-content">
        @foreach (var item in cultureItems)
        {
            <a href="/Home/SetLanguage/?culture=@item.Value&returnUrl=@Context.Request.Path">@item.Text</a>
        }
    </div>
</div>